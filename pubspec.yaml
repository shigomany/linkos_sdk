name: linkos_sdk
description: "Link-OS Multiplatform SDK for Dart/Flutter"
version: 0.0.1
homepage: https://github.com/shigomany/linkos_sdk.git

environment:
  sdk: '>=3.2.3 <4.0.0'
  flutter: '>=3.3.0'

dependencies:
  flutter:
    sdk: flutter
  plugin_platform_interface: ^2.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^2.0.0
  pigeon: ^16.0.3
  build_runner: ^2.4.8
  pigeon_build_runner: ^1.1.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # This section identifies this Flutter project as a plugin project.
  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)
  # which should be registered in the plugin registry. This is required for
  # using method channels.
  # The Android 'package' specifies package in which the registered class is.
  # This is required for using method channels on Android.
  # The 'ffiPlugin' specifies that native code should be built and bundled.
  # This is required for using `dart:ffi`.
  # All these are used by the tooling to maintain consistency when
  # adding or updating assets for this project.
  plugin:
    platforms:
      android:
        package: com.plugin.linkos_sdk
        pluginClass: LinkosSdkPlugin
      ios:
        pluginClass: LinkosSdkPlugin
      linux:
        pluginClass: LinkosSdkPlugin
      macos:
        pluginClass: LinkosSdkPlugin
      windows:
        pluginClass: LinkosSdkPluginCApi

  # To add assets to your plugin package, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  #
  # For details regarding assets in packages, see
  # https://flutter.dev/assets-and-images/#from-packages
  #
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # To add custom fonts to your plugin package, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts in packages, see
  # https://flutter.dev/custom-fonts/#from-packages
pigeon:
  # main-input defines default values and base paths or package names
  main-input:
    input: pigeons/
    dart:
      out: lib/src/pigeons/ 
      test-out: test/pigeons/
    # ast:
    #   out: lib/src/pigeons_ast/
    objc:
      header-out: ios/Runner/
      source-out: ios/Runner/
      # Set this to a unique prefix for your plugin or application, per Objective-C naming conventions.
      prefix: LINKOS
    java:
      out: android/src/main/java/com/plugin/linkos_sdk
      package: com.plugin.linkos_sdk
    # swift:
    #   out: ios/Runner/
    # kotlin:
    #   out: android/app/src/main/kotlin/dev/flutter/pigeon_example_app
    #   package: your.package.name
    cpp:
      header-out: windows/runner
      source-out: windows/runner
      namespace: LinkOs
  inputs:
    - input: link_os_sdk.dart
      dart:
        out: link_os_sdk.g.dart
        test-out: link_os_sdk.dart
      # ast:
      #   out: my_pigeon_ast.dart
      # objc:
      #   header-out: my_pigeon.g.h
      #   source-out: my_pigeon.g.s
      java:
        out: LinkOsSdkGen.java
        # Adding `.` before a package will join a package name from main-input with the package belowe
        # Result: your.package.name.additional.package.name
      # kotlin:
      #   out: MyPigeon.g.kt
      #   # Adding `.` before a package will join a package name from main-input with the package belowe
      #   # Result: your.package.name.additional.package.name
      #   package: .additional.package.name
      # swift:
      #   out: MyPigeon.g.swift
      # cpp:
      #   header-out: my_pigeon.g.h
      #   source-out: my_pigeon.g.cpp